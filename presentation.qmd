---
title: "Global Trends in Agriculture: Crops and Livestock"
subtitle: "INFO 526 - Fall 2023 - Project 1"
author: "Jay Patil, Johnson Jeeva John Jacob, Likhith Ramesh, Pragnya Narasimha, Sreeharsha Nalluri, Sumanth Manohar, Tanmay Nalawade"
title-slide-attributes:
  data-background-image: images/crop_background_image.png
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
  
editor: visual
execute:
  echo: false
---

```{r}
#| label: load-packages
#| include: false

# Load packages here
pacman::p_load(tidymodels,
               tidyverse)

```

```{r}
#| label: load-libraries
#| include: false

library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(sf)
library(rnaturalearth)
library(viridis)
library(leaflet)
```

```{r}
#| label: setup
#| include: false

# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 11))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618 
  )
```

## DATASET DESCRIPTION

1.  **How has the global production of staple crops changed over the past 50 years, and what are the regional trends in production?**

    The dataset encompasses global agricultural production trends, focusing on 278 crop and livestock products. It includes indicators such as production quantities, yields, and processed outputs across various regions from 1961 to 2022. Compiled from FAOSTAT, the dataset is pre-processed for consistency, enabling analysis of global food production and climate impacts.

    *"Source" : [FAO FAOSTAT](https://www.fao.org/faostat/en/#data/QCL/visualize)* .

2.  **How has the global production and trade of livestock commodities changed in response to rising population and demand for protein?**

    The dataset captures global livestock production and trade trends, including volumes of imports, exports, and production for key commodities like *beef*, *pork*, and *milk*. It spans multiple regions (e.g., *North America*, *Europe*, *Asia*) and tracks data across years in response to rising population and protein demand. Quantitative variables include *production volumes*, *trade volumes*, and *population size*, alongside categorical variables such as *region* and *livestock commodity*.

    *"Source" : [FAO FAOSTAT](https://www.fao.org/faostat/en/#data/QCL/visualize)* .

```{r}
#| label: load-data
#| include: false

# Load data here
prod_data <- read.csv("data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_All_Data.csv")
area_codes <- read.csv("data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_AreaCodes.csv")
item_codes <- read.csv("data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_ItemCodes.csv")
elements <- read.csv("data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_Elements.csv")

livestock_data <- read.csv("./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_All_Data.csv")
area_codes <- read.csv("./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_AreaCodes.csv")
elements <- read.csv("./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_Elements.csv")
item_codes <- read.csv("./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_ItemCodes.csv")
```

```{r, warning=FALSE}

# Step 2: Extract and filter data for the top 10 staple crops
# Define the top 10 staple crops based on Item names
top_crops <- c("Wheat", "Rice", "Maize (corn)", "Potatoes", "Barley", 
               "Cassava", "Sweet potatoes", "Sorghum", "Oats", "Beans")

# Filter the data for these crops and "Production" element (not "Area harvested")
prod_data_filtered <- prod_data %>%
  filter(Item %in% top_crops) %>%
  filter(Element == "Production") %>%
  select(Area, Item, Element, Unit, starts_with('Y'))  # Select relevant columns


# Step 3: Preprocess the data
# Remove columns that have characters like 'F' or 'N' in their names (e.g. Y1961F, Y1961N)
prod_data_filtered <- prod_data_filtered %>%
  select(-matches("F$|N$"))  # Remove columns ending with "F" or "N"

# Pivot the data so that each year's production is a separate column
prod_data_long <- prod_data_filtered %>%
  pivot_longer(cols = starts_with("Y"), 
               names_to = "Year", 
               values_to = "Production") %>%
  filter(!is.na(Production))  # Remove rows with missing production data

# Convert Year to numeric and Production to numeric
prod_data_long <- prod_data_long %>%
  mutate(Year = as.numeric(gsub("Y", "", Year)),  # Extract numeric year from column names
         Production = as.numeric(Production))  # Ensure production is numeric


# Step 5: (Optional) Export the processed data
# Export the cleaned data to a CSV file
write.csv(prod_data_long, "data/Processed_Staple_Crops_Production.csv", row.names = FALSE)

```

```{r}
prod_data_long |> 
  head() |> 
  kableExtra::kable() |> 
  kableExtra::kable_styling(full_width = TRUE, position = "center", font_size = 14)

```

## Research question 1

```{r, fig.height=9,fig.width=12}
# Summarize global production trends over time
global_production <- prod_data_long %>%
  group_by(Year, Item) %>%
  summarize(Global_Production = sum(Production, na.rm = TRUE), .groups = "drop")

# Create a line plot to visualize the global production trends over time
ggplot(global_production, aes(x = Year, y = Global_Production)) +
  geom_line(aes(color = Item), linewidth = 1.2) +  # Line plot with thicker lines
  theme_minimal() +
  labs(
    x = "Year", 
    y = "Global Production (Metric Tons)",  
    color = "Crop",
    title = "Global Production Trends of Top 10 Staple Crops (1961 - 2022)",
    caption = "Source: FAO"
  ) +
  scale_color_manual(
    values = c("Wheat" = "#FF5733", "Rice" = "#33C4FF", "Maize (corn)" = "#FFB533", 
               "Potatoes" = "#33FF57", "Barley" = "#5A33FF", "Cassava" = "#FF33A1", 
               "Sweet potatoes" = "#FF8533", "Sorghum" = "#33FFAA", "Oats" = "#FF33CC", 
               "Beans" = "#7A33FF"),
    labels = c("Wheat", "Rice", "Maize (corn)", "Potatoes", "Barley", 
               "Cassava", "Sweet potatoes", "Sorghum", "Oats", "Beans")
  ) +
  coord_cartesian(clip = "off") +
  theme(
    legend.position = c(0.36, 0.80),  # Slightly move the legend right and down
    legend.direction = "horizontal",  # Display legend horizontally
    legend.box = "horizontal",  # Align the legend horizontally
    axis.title.x = element_text(hjust = 0.5, size = 18),  # Increase X axis title font size
    axis.title.y = element_text(hjust = 0.5, size = 18),  # Increase Y axis title font size
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5),  # Increase title font size
    plot.caption = element_text(size = 14, hjust = 1, color = "grey30"),  # Caption with slightly larger font
    legend.title = element_text(size = 18),  # Increase legend title font size
    legend.text = element_text(size = 16),  # Increase legend text font size
    axis.text.x = element_text(size = 14, face = "bold"),  # Increase and bold X axis tick labels
    axis.text.y = element_text(size = 14, face = "bold")   # Increase and bold Y axis tick labels
  ) +
  scale_y_continuous(
    labels = scales::comma_format(scale = 1e-6, prefix = "", suffix = "M"),  # Format y-axis in millions with commas
    breaks = scales::pretty_breaks(n = 10)  # Add more ticks to y-axis
  ) +
  scale_x_continuous(
    breaks = seq(min(global_production$Year, na.rm = TRUE), max(global_production$Year, na.rm = TRUE), by = 5)  # Increase x-axis ticks
  ) +
  # Set figure size for output
  theme(
    plot.margin = margin(2, 2, 2, 2)  # Increase plot margin if needed
  )


```

## Research question 1

```{r, warning=FALSE, fig.height=9,fig.width=12}
# Load required libraries
library(dplyr)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(viridis)

# Step 1: Load the map data (world map)
world <- ne_countries(scale = "medium", returnclass = "sf")

# Step 2: Aggregate production data for the 10 staple crops
# Define the top 10 crops
top_crops <- c("Wheat", "Rice", "Maize (corn)", "Potatoes", "Barley", 
               "Cassava", "Sweet potatoes", "Sorghum", "Oats", "Beans")

# Aggregate total production by country across all years for the top crops
agg_prod_data <- prod_data_long %>%
  filter(Item %in% top_crops) %>%
  group_by(Area) %>%
  summarize(Total_Production = sum(Production, na.rm = TRUE), .groups = "drop")

# Step 3: Join the aggregated production data with the world map data
regional_map_data <- world %>%
  left_join(agg_prod_data, by = c("name" = "Area"))  # Join by country names

# Step 4: Create the choropleth map with a sequential blue palette and custom color for missing data
ggplot(data = regional_map_data) +
  geom_sf(aes(fill = Total_Production), color = "black", size = 0.1) +  # Fill countries with production data
  scale_fill_gradient(
    low = "#3182bd",  # Light blue
    high = "#225577", # Dark blue
    name = "Total Production\n(Metric Tons)",
    labels = scales::comma_format(scale = 1e-6, suffix = "M"),  # Format in millions
    na.value = "#e0efff",  # Use the specified color (#e0efff) for missing data
    guide = guide_colorbar(barwidth = 15, barheight = 1)  # Increase the width of the legend
  ) +
  labs(
    title = "Production of Top 10 Staple Crops",
    caption = "Source: FAO"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5),  # Title styling
    plot.caption = element_text(size = 14, hjust = 1, color = "#e0efff"),  # Caption styling
    legend.position = "bottom",  # Legend at the bottom
    legend.title = element_text(size = 16),  # Legend title font size
    legend.text = element_text(size = 14),  # Legend text font size
    axis.text = element_blank(),  # Remove axis ticks for cleaner map
    axis.title = element_blank()  # Remove axis titles
  )



```

## Research question 1

```{r, warning=FALSE, fig.height=9,fig.width=14}
# Load required libraries
library(dplyr)
library(ggplot2)

# Step 1: Create a classification of countries (Developed vs. Developing)
# Define lists of developed and developing countries (replace with actual classification)
developed_countries <- c("United States", "Canada", "Germany", "United Kingdom", "France", "Australia", "Japan")
developing_countries <- c("India", "China", "Brazil", "Nigeria", "Indonesia", "Mexico", "South Africa")

# Step 2: Add a classification column to the production data
# Ensure that prod_data_long contains the correct column names like 'Area' for country names, 'Year' for the year, and 'Production' for the data values

prod_data_long <- prod_data_long %>%
  mutate(
    Country_Category = case_when(
      Area %in% developed_countries ~ "Developed",
      Area %in% developing_countries ~ "Developing",
      TRUE ~ "Other"  # Classify remaining countries as "Other"
    )
  )

# Step 3: Filter for Developed and Developing countries only
prod_data_classified <- prod_data_long %>%
  filter(Country_Category %in% c("Developed", "Developing"))

# Step 4: Aggregate production by year and country category
agg_trends <- prod_data_classified %>%
  group_by(Year, Country_Category) %>%
  summarize(Total_Production = sum(Production, na.rm = TRUE), .groups = "drop")

# Step 5: Create the line plot with modified legend position and increased axis/title sizes
ggplot(agg_trends, aes(x = Year, y = Total_Production, color = Country_Category, group = Country_Category)) +
  geom_line(linewidth = 1.2) +  # Line plot
  theme_minimal() +
  labs(
    title = "Production Trends of Staple Crops in Developed vs. Developing Countries (1961 - 2022)",
    x = "Year",
    y = "Total Production (Metric Tons)",
    color = "Country Category",
    caption = "Source: FAO"
  ) +
  scale_y_continuous(
    labels = scales::comma_format(scale = 1e-6, suffix = "M"),  
    breaks = scales::pretty_breaks(n = 10)  # Add more ticks to y-axis
  ) +
  scale_x_continuous(
    breaks = seq(min(prod_data_classified$Year, na.rm = TRUE), max(prod_data_classified$Year, na.rm = TRUE), by = 5)
  ) +
  scale_color_manual(
    values = c("Developed" = "blue", "Developing" = "orange")
  ) +
  theme(
    plot.title = element_text(size = 22, face = "bold", hjust = 0.5),
    axis.title.x = element_text(size = 19),  
    axis.title.y = element_text(size = 19),  
    axis.text = element_text(size = 12),
    legend.position = c(0.3, 0.75),  
    legend.title = element_text(size = 19),  
    legend.text = element_text(size = 18)  
  )

```

```{r Filtering and preprocessing, warning=FALSE}

# Identifying livestock commodities that we want
livestock_items <- c("Beef and Buffalo Meat, primary", "Fat of pigs", "Meat, Poultry", "Sheep and Goat Meat", "Milk, Total")

# Filtering for livestock production and trade data
livestock_data_filtered <- livestock_data %>%
  filter(Item %in% livestock_items,
         Element %in% c("Production", "Area harvested", "Yield")) %>%
  select(Area, Item, Element, starts_with("Y"))

columns_to_pivot <- grep("^Y[0-9]{4}$", names(livestock_data_filtered), value = TRUE)

# Reshaping the data to long format
livestock_data_long <- livestock_data_filtered %>%
  pivot_longer(
    cols = all_of(columns_to_pivot),
    names_to = "Year",
    values_to = "Value"
  ) %>%
  mutate(Year = as.numeric(gsub("Y", "", Year))) # To convert Year to numeric

# Remove rows with missing Year values if there are any
livestock_data_long <- livestock_data_long %>%
  filter(!is.na(Year))

# Aggregate data by year and element
aggregated_data <- livestock_data_long %>%
  group_by(Year, Element) %>%
  summarise(Total_Value = sum(Value, na.rm = TRUE), .groups = "drop")

# Step 4: Decode area names and item names
area_decoded <- area_codes %>%
  rename(Area_Code = `Area.Code`, Area_Name = Area)

item_decoded <- item_codes %>%
  rename(Item_Code = `Item.Code`, Item_Name = `Item`)

# For plot 2
commodity_trends <- livestock_data_long %>%
  filter(Element == "Production") %>%
  group_by(Year, Item) %>%
  summarise(Total_Production = sum(Value, na.rm = TRUE), .groups = "drop")

# For plot 3
# Load Natural Earth data for country boundaries
world <- ne_countries(scale = "medium", returnclass = "sf")

# Prepare data for map-based visualizations
# Summarize livestock production by country
map_data <- livestock_data_long %>%
  filter(Element %in% c("Production", "Export Quantity", "Import Quantity")) %>%
  group_by(Area, Element) %>%
  summarize(Total_Value = sum(Value, na.rm = TRUE)) %>%
  ungroup()

# Merge map data with country boundaries
map_data <- map_data %>%
  left_join(world, by = c("Area" = "admin"))

# Create separate datasets for production, export, and import
map_production <- map_data %>%
  filter(Element == "Production")

map_trade <- map_data %>%
  filter(Element %in% c("Export Quantity", "Import Quantity")) %>%
  mutate(Trade_Type = ifelse(Element == "Export Quantity", "Export", "Import"))

#For Interactive plot 4
# Ensure `geometry` column is in correct SF format
map_production_sf <- map_production %>%
  st_as_sf()

population_data <- data.frame(
  Area = unique(map_production$Area),
  Population = runif(length(unique(map_production$Area)), 1e6, 1e8) # Simulated population
)

# Merge population data to calculate per capita production
map_production <- map_production %>%
  left_join(population_data, by = "Area") %>%
  mutate(Per_Capita_Production = Total_Value / Population)

# Convert to sf object
map_production_sf <- map_production %>%
  st_as_sf()

# Step 2: Define color palette
production_pal <- colorNumeric("YlGn", domain = map_production_sf$Total_Value)
per_capita_pal <- colorNumeric("Blues", domain = map_production_sf$Per_Capita_Production)
```

## Research question 2

```{r, warning=FALSE, fig.height=9,fig.width=16}
# Plot 2: Trends in individual livestock commodities (Production Only)
ggplot(data = commodity_trends, aes(x = Year, y = Total_Production / 1e6, fill = Item)) +
  geom_area(position = "stack", alpha = 0.7) +
  labs(
    title = "Trends in Production of Livestock Commodities",
    x = "Year",
    y = "Production Volume (in millions of tons)",
    fill = "Commodity"
  ) +
  theme_minimal()
```

## Research question 2

```{r, warning=FALSE, fig.height=9,fig.width=12}
# Plot 3: Livestock Production on a World Map
ggplot() +
  geom_sf(data = world) +
  geom_sf(data = map_production, aes(geometry = geometry, fill = Total_Value), color = "black") +
  scale_fill_viridis_c(name = "Production (tons)", option = "C") +
  scale_fill_gradient(
    low = "khaki1", 
    high = "green4"
  )+
  labs(
    title = "Global Livestock Production",
    subtitle = "Production volumes (tons) by country",
    caption = "Source: FAO Livestock Data"
  ) +
  theme_minimal()
```

## Interactive Map of Livestock Elements

```{r, warning=FALSE, fig.height=9,fig.width=12}

#Plot 4: Interactive plot 3
leaflet() %>%
  # Base map
  addProviderTiles(providers$CartoDB.Positron) %>%
  
  # Production layer
  addPolygons(
    data = map_production_sf,
    fillColor = ~production_pal(Total_Value),
    color = "black",
    weight = 1,
    fillOpacity = 0.7,
    label = ~paste(
      "<strong>", Area, "</strong><br>",
      "Total Production: ", scales::comma(Total_Value), " tons"
    ),
    popup = ~paste(
      "<strong>Country:</strong> ", Area, "<br>",
      "<strong>Total Production (tons):</strong> ", scales::comma(Total_Value), "<br>",
      "<strong>Population:</strong> ", scales::comma(Population), "<br>",
      "<strong>Per Capita Production (tons):</strong> ", round(Per_Capita_Production, 2)
    ),
    highlightOptions = highlightOptions(
      weight = 2,
      color = "blue",
      bringToFront = TRUE
    ),
    group = "Total Production"
  ) %>%
  # Per Capita Production layer
  addPolygons(
    data = map_production_sf,
    fillColor = ~per_capita_pal(Per_Capita_Production),
    color = "black",
    weight = 1,
    fillOpacity = 0.7,
    label = ~paste(
      "<strong>", Area, "</strong><br>",
      "Per Capita Production: ", round(Per_Capita_Production, 2), " tons"
    ),
    popup = ~paste(
      "<strong>Country:</strong> ", Area, "<br>",
      "<strong>Per Capita Production (tons):</strong> ", round(Per_Capita_Production, 2), "<br>",
      "<strong>Total Production (tons):</strong> ", scales::comma(Total_Value), "<br>",
      "<strong>Population:</strong> ", scales::comma(Population)
    ),
    highlightOptions = highlightOptions(
      weight = 2,
      color = "green",
      bringToFront = TRUE
    ),
    group = "Per Capita Production"
  ) %>%
  
  # Add a layers control
  addLayersControl(
    overlayGroups = c("Total Production", "Per Capita Production"),
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  
  # Add legends
  addLegend(
    pal = production_pal,
    values = map_production_sf$Total_Value,
    title = "Total Production (tons)",
    position = "bottomleft",
    group = "Total Production"
  ) %>%
  addLegend(
    pal = per_capita_pal,
    values = map_production_sf$Per_Capita_Production,
    title = "Per Capita Production (tons)",
    position = "bottomright",
    group = "Per Capita Production"
  )
```

## Conclusion

The global production of the top staple crops has increased significantly over years, with developing countries showing rapid growth compared to the stable yields in developed nations.

Livestock production has steadily grown globally, with rising demand for protein-rich foods leading to notable increases in key commodities such as Milk, beef and poultry.

**Future Work**

Explore the impact of climate change on crop yields and livestock production by integrating external environmental data, such as temperature, precipitation, and extreme weather events, to understand regional vulnerabilities and adaptive strategies.

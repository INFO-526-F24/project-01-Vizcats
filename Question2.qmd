---
title: "Question 2"
format:
  html:
    embed-resources: true
execute:
  warning: false
  message: false
toc: true
---

```{r load-packages, message = FALSE}

if (!require("pacman")) 
  install.packages("pacman")

pacman::p_load(tidyverse,
               dplyr,
               ggplot2,
               tidyr,
               scales,
               readr,
               ggthemes,
               rnaturalearth,
               sf
               )
```

```{r load-datasets}

# Loading the main datasets for visualisations
livestock_data <- read.csv("./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_All_Data.csv")
area_codes <- read.csv("./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_AreaCodes.csv")
elements <- read.csv("./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_Elements.csv")
item_codes <- read.csv("./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_ItemCodes.csv")

```


```{r Filtering and preprocessing}

# Identifying livestock commodities that we want
livestock_items <- c("Beef and Buffalo Meat, primary", "Fat of pigs", "Meat, Poultry", "Sheep and Goat Meat", "Milk, Total")

# Filtering for livestock production and trade data
livestock_data_filtered <- livestock_data %>%
  filter(Item %in% livestock_items,
         Element %in% c("Production", "Area harvested", "Yield")) %>%
  select(Area, Item, Element, starts_with("Y"))

columns_to_pivot <- grep("^Y[0-9]{4}$", names(livestock_data_filtered), value = TRUE)

# Reshaping the data to long format
livestock_data_long <- livestock_data_filtered %>%
  pivot_longer(
    cols = all_of(columns_to_pivot),
    names_to = "Year",
    values_to = "Value"
  ) %>%
  mutate(Year = as.numeric(gsub("Y", "", Year))) # To convert Year to numeric

# Remove rows with missing Year values if there are any
livestock_data_long <- livestock_data_long %>%
  filter(!is.na(Year))

# Aggregate data by year and element
aggregated_data <- livestock_data_long %>%
  group_by(Year, Element) %>%
  summarise(Total_Value = sum(Value, na.rm = TRUE), .groups = "drop")

# Step 4: Decode area names and item names
area_decoded <- area_codes %>%
  rename(Area_Code = `Area.Code`, Area_Name = Area)

item_decoded <- item_codes %>%
  rename(Item_Code = `Item.Code`, Item_Name = `Item`)

# For plot 2
commodity_trends <- livestock_data_long %>%
  filter(Element == "Production") %>%
  group_by(Year, Item) %>%
  summarise(Total_Production = sum(Value, na.rm = TRUE), .groups = "drop")

# For plot 3
# Load Natural Earth data for country boundaries
world <- ne_countries(scale = "medium", returnclass = "sf")

# Prepare data for map-based visualizations
# Summarize livestock production by country
map_data <- livestock_data_long %>%
  filter(Element %in% c("Production", "Export Quantity", "Import Quantity")) %>%
  group_by(Area, Element) %>%
  summarize(Total_Value = sum(Value, na.rm = TRUE)) %>%
  ungroup()

# Merge map data with country boundaries
map_data <- map_data %>%
  left_join(world, by = c("Area" = "admin"))

# Create separate datasets for production, export, and import
map_production <- map_data %>%
  filter(Element == "Production")

map_trade <- map_data %>%
  filter(Element %in% c("Export Quantity", "Import Quantity")) %>%
  mutate(Trade_Type = ifelse(Element == "Export Quantity", "Export", "Import"))

#For Interactive plot 4
# Ensure `geometry` column is in correct SF format
map_production_sf <- map_production %>%
  st_as_sf()
```

```{r plots}

# Plot 1: Trends in livestock production and yeids
ggplot(data = aggregated_data, aes(x = Year, y = Total_Value / 1e6, color = Element)) +
  geom_line(linewidth = 1.2) +
  labs(
    title = "Global Trends in Livestock Production and Trade",
    x = "Year",
    y = "Volume (in millions of tons)",
    color = "Element"
  ) +
  theme_minimal() +
  scale_y_continuous(labels = scales::comma)

# Plot 2: Trends in individual livestock commodities (Production Only)
ggplot(data = commodity_trends, aes(x = Year, y = Total_Production / 1e6, fill = Item)) +
  geom_area(position = "stack", alpha = 0.7) +
  labs(
    title = "Trends in Production of Livestock Commodities",
    x = "Year",
    y = "Production Volume (in millions of tons)",
    fill = "Commodity"
  ) +
  theme_minimal()

# Plot 3: Livestock Production on a World Map
ggplot() +
  geom_sf(data = world) +
  geom_sf(data = map_production, aes(geometry = geometry, fill = Total_Value), color = "black") +
  scale_fill_viridis_c(name = "Production (tons)", option = "C") +
  scale_fill_gradient(
    low = "khaki1", 
    high = "green4"
  )+
  labs(
    title = "Global Livestock Production",
    subtitle = "Production volumes (tons) by country",
    caption = "Source: FAO Livestock Data"
  ) +
  theme_minimal()
```
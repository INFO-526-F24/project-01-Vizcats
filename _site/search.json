[
  {
    "objectID": "Question1.html",
    "href": "Question1.html",
    "title": "Project Title",
    "section": "",
    "text": "# Load required libraries\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(readr)\nlibrary(sf)\n\nLinking to GEOS 3.12.2, GDAL 3.9.3, PROJ 9.4.1; sf_use_s2() is TRUE\n\nlibrary(rnaturalearth)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\n# Step 1: Load datasets\nprod_data &lt;- read.csv(\"data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_All_Data.csv\")\narea_codes &lt;- read.csv(\"data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_AreaCodes.csv\")\nitem_codes &lt;- read.csv(\"data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_ItemCodes.csv\")\nelements &lt;- read.csv(\"data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_Elements.csv\")\n\n\n# Step 2: Extract and filter data for the top 10 staple crops\n# Define the top 10 staple crops based on Item names\ntop_crops &lt;- c(\"Wheat\", \"Rice\", \"Maize (corn)\", \"Potatoes\", \"Barley\", \n               \"Cassava\", \"Sweet potatoes\", \"Sorghum\", \"Oats\", \"Beans\")\n\n# Filter the data for these crops and \"Production\" element (not \"Area harvested\")\nprod_data_filtered &lt;- prod_data %&gt;%\n  filter(Item %in% top_crops) %&gt;%\n  filter(Element == \"Production\") %&gt;%\n  select(Area, Item, Element, Unit, starts_with('Y'))  # Select relevant columns\n\n\n# Step 3: Preprocess the data\n# Remove columns that have characters like 'F' or 'N' in their names (e.g. Y1961F, Y1961N)\nprod_data_filtered &lt;- prod_data_filtered %&gt;%\n  select(-matches(\"F$|N$\"))  # Remove columns ending with \"F\" or \"N\"\n\n# Pivot the data so that each year's production is a separate column\nprod_data_long &lt;- prod_data_filtered %&gt;%\n  pivot_longer(cols = starts_with(\"Y\"), \n               names_to = \"Year\", \n               values_to = \"Production\") %&gt;%\n  filter(!is.na(Production))  # Remove rows with missing production data\n\n# Convert Year to numeric and Production to numeric\nprod_data_long &lt;- prod_data_long %&gt;%\n  mutate(Year = as.numeric(gsub(\"Y\", \"\", Year)),  # Extract numeric year from column names\n         Production = as.numeric(Production))  # Ensure production is numeric\n\n\n# Step 5: (Optional) Export the processed data\n# Export the cleaned data to a CSV file\nwrite.csv(prod_data_long, \"data/Processed_Staple_Crops_Production.csv\", row.names = FALSE)\n\n\n# Summarize global production trends over time\nglobal_production &lt;- prod_data_long %&gt;%\n  group_by(Year, Item) %&gt;%\n  summarize(Global_Production = sum(Production, na.rm = TRUE), .groups = \"drop\")\n\n# Create a line plot to visualize the global production trends over time\nggplot(global_production, aes(x = Year, y = Global_Production)) +\n  geom_line(aes(color = Item), linewidth = 1.2) +  # Line plot with thicker lines\n  theme_minimal() +\n  labs(\n    x = \"Year\", \n    y = \"Global Production (Metric Tons)\",  \n    color = \"Crop\",\n    title = \"Global Production Trends of Top 10 Staple Crops (1961 - 2022)\",\n    caption = \"Source: FAO\"\n  ) +\n  scale_color_manual(\n    values = c(\"Wheat\" = \"#FF5733\", \"Rice\" = \"#33C4FF\", \"Maize (corn)\" = \"#FFB533\", \n               \"Potatoes\" = \"#33FF57\", \"Barley\" = \"#5A33FF\", \"Cassava\" = \"#FF33A1\", \n               \"Sweet potatoes\" = \"#FF8533\", \"Sorghum\" = \"#33FFAA\", \"Oats\" = \"#FF33CC\", \n               \"Beans\" = \"#7A33FF\"),\n    labels = c(\"Wheat\", \"Rice\", \"Maize (corn)\", \"Potatoes\", \"Barley\", \n               \"Cassava\", \"Sweet potatoes\", \"Sorghum\", \"Oats\", \"Beans\")\n  ) +\n  coord_cartesian(clip = \"off\") +\n  theme(\n    legend.position = c(0.36, 0.80),  # Slightly move the legend right and down\n    legend.direction = \"horizontal\",  # Display legend horizontally\n    legend.box = \"horizontal\",  # Align the legend horizontally\n    axis.title.x = element_text(hjust = 0.5, size = 18),  # Increase X axis title font size\n    axis.title.y = element_text(hjust = 0.5, size = 18),  # Increase Y axis title font size\n    plot.title = element_text(size = 20, face = \"bold\", hjust = 0.5),  # Increase title font size\n    plot.caption = element_text(size = 14, hjust = 1, color = \"grey30\"),  # Caption with slightly larger font\n    legend.title = element_text(size = 18),  # Increase legend title font size\n    legend.text = element_text(size = 16),  # Increase legend text font size\n    axis.text.x = element_text(size = 14, face = \"bold\"),  # Increase and bold X axis tick labels\n    axis.text.y = element_text(size = 14, face = \"bold\")   # Increase and bold Y axis tick labels\n  ) +\n  scale_y_continuous(\n    labels = scales::comma_format(scale = 1e-6, prefix = \"\", suffix = \"M\"),  # Format y-axis in millions with commas\n    breaks = seq(0, max(global_production$Global_Production, na.rm = TRUE), by = 200000000)  # Reduced step size for y-axis ticks\n  ) +\n  scale_x_continuous(\n    breaks = seq(min(global_production$Year, na.rm = TRUE), max(global_production$Year, na.rm = TRUE), by = 5)  # Increase x-axis ticks\n  ) +\n  # Set figure size for output\n  theme(\n    plot.margin = margin(2, 2, 2, 2)  # Increase plot margin if needed\n  )\n\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n\n\n\n\n\n\n\n\n\n\n# Load required libraries\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(viridis)\n\n# Step 1: Load the map data (world map)\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Step 2: Aggregate production data for the 10 staple crops\n# Define the top 10 crops\ntop_crops &lt;- c(\"Wheat\", \"Rice\", \"Maize (corn)\", \"Potatoes\", \"Barley\", \n               \"Cassava\", \"Sweet potatoes\", \"Sorghum\", \"Oats\", \"Beans\")\n\n# Aggregate total production by country across all years for the top crops\nagg_prod_data &lt;- prod_data_long %&gt;%\n  filter(Item %in% top_crops) %&gt;%\n  group_by(Area) %&gt;%\n  summarize(Total_Production = sum(Production, na.rm = TRUE), .groups = \"drop\")\n\n# Step 3: Join the aggregated production data with the world map data\nregional_map_data &lt;- world %&gt;%\n  left_join(agg_prod_data, by = c(\"name\" = \"Area\"))  # Join by country names\n\n# Step 4: Create the choropleth map\nggplot(data = regional_map_data) +\n  geom_sf(aes(fill = Total_Production), color = \"black\", size = 0.1) +  # Fill countries with production data\n  scale_fill_gradient(\n    low = \"red\", \n    high = \"darkblue\", \n    name = \"Total Production\\n(Metric Tons)\",\n    labels = scales::comma_format(scale = 1e-6, suffix = \"M\")  # Format in millions\n  ) +\n  labs(\n    title = \"Production of Top 10 Staple Crops\",\n    caption = \"Source: FAO\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 20, face = \"bold\", hjust = 0.5),  # Title styling\n    plot.caption = element_text(size = 14, hjust = 1, color = \"grey30\"),  # Caption styling\n    legend.position = \"bottom\",  # Legend at the bottom\n    legend.title = element_text(size = 16),  # Legend title font size\n    legend.text = element_text(size = 14),  # Legend text font size\n    axis.text = element_blank(),  # Remove axis ticks for cleaner map\n    axis.title = element_blank()  # Remove axis titles\n  )\n\n\n\n\n\n\n\n\n\n# Load required libraries\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Step 1: Create a classification of countries (Developed vs. Developing)\n# Define lists of developed and developing countries (replace with actual classification)\ndeveloped_countries &lt;- c(\"United States\", \"Canada\", \"Germany\", \"United Kingdom\", \"France\", \"Australia\", \"Japan\")\ndeveloping_countries &lt;- c(\"India\", \"China\", \"Brazil\", \"Nigeria\", \"Indonesia\", \"Mexico\", \"South Africa\")\n\n# Step 2: Add a classification column to the production data\n# Ensure that prod_data_long contains the correct column names like 'Area' for country names, 'Year' for the year, and 'Production' for the data values\n\nprod_data_long &lt;- prod_data_long %&gt;%\n  mutate(\n    Country_Category = case_when(\n      Area %in% developed_countries ~ \"Developed\",\n      Area %in% developing_countries ~ \"Developing\",\n      TRUE ~ \"Other\"  # Classify remaining countries as \"Other\"\n    )\n  )\n\n# Step 3: Filter for Developed and Developing countries only\nprod_data_classified &lt;- prod_data_long %&gt;%\n  filter(Country_Category %in% c(\"Developed\", \"Developing\"))\n\n# Step 4: Aggregate production by year and country category\nagg_trends &lt;- prod_data_classified %&gt;%\n  group_by(Year, Country_Category) %&gt;%\n  summarize(Total_Production = sum(Production, na.rm = TRUE), .groups = \"drop\")\n\n# Step 5: Create the line plot\nggplot(agg_trends, aes(x = Year, y = Total_Production, color = Country_Category, group = Country_Category)) +\n  geom_line(linewidth = 1.2) +  # Line plot\n  theme_minimal() +\n  labs(\n    title = \"Production Trends of Staple Crops in Developed vs. Developing Countries (1961 - 2022)\",\n    x = \"Year\",\n    y = \"Total Production (Metric Tons)\",\n    color = \"Country Category\",\n    caption = \"Source: FAO\"\n  ) +\n  scale_y_continuous(\n    labels = scales::comma_format(scale = 1e-6, suffix = \"M\")  # Format y-axis in millions\n  ) +\n  scale_x_continuous(\n    breaks = seq(min(prod_data_classified$Year, na.rm = TRUE), max(prod_data_classified$Year, na.rm = TRUE), by = 5)\n  ) +\n  scale_color_manual(\n    values = c(\"Developed\" = \"blue\", \"Developing\" = \"green\")\n  ) +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12),\n    legend.title = element_text(size = 14),\n    legend.text = element_text(size = 12)\n  )"
  },
  {
    "objectID": "presentation.html#introduction",
    "href": "presentation.html#introduction",
    "title": "Global Trends in Agriculture: Crops and Livestock",
    "section": "Introduction",
    "text": "Introduction\n\n\nProject Description: This project involves the compilation and analysis of statistical data for 278 crop and livestock products, presented through key indicators such as production quantities, yields, and processed product outputs.\n\nImpact: The dataset serves as a critical resource for understanding global agricultural production patterns, providing insights into the dynamics of crop and livestock industries and supporting data-driven decision-making in agriculture."
  },
  {
    "objectID": "presentation.html#data-set",
    "href": "presentation.html#data-set",
    "title": "Global Trends in Agriculture: Crops and Livestock",
    "section": "DATA SET",
    "text": "DATA SET\n\n\nDataset Description: This report examines the FAOSTAT Crop and Livestock Production dataset, offering comprehensive global agricultural production statistics for over 200 countries.\nFeatures: It includes data on crop production volumes, harvested areas, yields, and livestock statistics, aiming to analyze agricultural productivity trends, regional outputs, and sustainable agricultural practices. FAO uses estimation methods. This ensures consistency in the data for over 200 countries and regions. “Source” : FAO FAOSTAT"
  },
  {
    "objectID": "presentation.html#project-approach",
    "href": "presentation.html#project-approach",
    "title": "Global Trends in Agriculture: Crops and Livestock",
    "section": "Project Approach",
    "text": "Project Approach\n\n\nData Cleaning:We cleaned the dataset by removing rows with missing values in key columns such as Area, Item, and Element to ensure completeness. The cleaned data was then structured with Year and Item as grouping variables and Value representing total production or harvested area. This preprocessing step enabled focused and accurate analysis of agricultural trends.\nExploratory Data Analysis (EDA): Uncover crop production & live stocks patterns and trends using statistical methods and visualizations."
  },
  {
    "objectID": "presentation.html#question-1",
    "href": "presentation.html#question-1",
    "title": "Global Trends in Agriculture: Crops and Livestock",
    "section": "Question 1",
    "text": "Question 1\n(General Assessment)\n\nHow has the global production of staple crops changed over the past 50 years, and what are the regional trends in production?"
  },
  {
    "objectID": "presentation.html#question-2",
    "href": "presentation.html#question-2",
    "title": "Global Trends in Agriculture: Crops and Livestock",
    "section": "Question 2",
    "text": "Question 2\n(Vulnerability Assessment)\n\nHow has the global production and trade of livestock commodities changed in response to rising population and demand for protein?"
  },
  {
    "objectID": "presentation.html#conclusion",
    "href": "presentation.html#conclusion",
    "title": "Global Trends in Agriculture: Crops and Livestock",
    "section": "Conclusion",
    "text": "Conclusion\n\n\nThe global production of the top staple crops has increased significantly over years, with developing countries showing rapid growth compared to the stable yields in developed nations.\nLivestock production has steadily grown globally, with rising demand for protein-rich foods leading to notable increases in key commodities such as Milk, beef and poultry."
  },
  {
    "objectID": "Question2.html",
    "href": "Question2.html",
    "title": "Question 2",
    "section": "",
    "text": "if (!require(\"pacman\")) \n  install.packages(\"pacman\")\n\npacman::p_load(tidyverse,\n               dplyr,\n               ggplot2,\n               tidyr,\n               scales,\n               readr,\n               ggthemes,\n               rnaturalearth,\n               sf,\n               leaflet\n               )\n\n\n# Loading the main datasets for visualisations\nlivestock_data &lt;- read.csv(\"./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_All_Data.csv\")\narea_codes &lt;- read.csv(\"./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_AreaCodes.csv\")\nelements &lt;- read.csv(\"./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_Elements.csv\")\nitem_codes &lt;- read.csv(\"./data/Production_Crops_Livestock_E_All_Data/Production_Crops_Livestock_E_ItemCodes.csv\")\n\n\n# Identifying livestock commodities that we want\nlivestock_items &lt;- c(\"Beef and Buffalo Meat, primary\", \"Fat of pigs\", \"Meat, Poultry\", \"Sheep and Goat Meat\", \"Milk, Total\")\n\n# Filtering for livestock production and trade data\nlivestock_data_filtered &lt;- livestock_data %&gt;%\n  filter(Item %in% livestock_items,\n         Element %in% c(\"Production\", \"Area harvested\", \"Yield\")) %&gt;%\n  select(Area, Item, Element, starts_with(\"Y\"))\n\ncolumns_to_pivot &lt;- grep(\"^Y[0-9]{4}$\", names(livestock_data_filtered), value = TRUE)\n\n# Reshaping the data to long format\nlivestock_data_long &lt;- livestock_data_filtered %&gt;%\n  pivot_longer(\n    cols = all_of(columns_to_pivot),\n    names_to = \"Year\",\n    values_to = \"Value\"\n  ) %&gt;%\n  mutate(Year = as.numeric(gsub(\"Y\", \"\", Year))) # To convert Year to numeric\n\n# Remove rows with missing Year values if there are any\nlivestock_data_long &lt;- livestock_data_long %&gt;%\n  filter(!is.na(Year))\n\n# Aggregate data by year and element\naggregated_data &lt;- livestock_data_long %&gt;%\n  group_by(Year, Element) %&gt;%\n  summarise(Total_Value = sum(Value, na.rm = TRUE), .groups = \"drop\")\n\n# Step 4: Decode area names and item names\narea_decoded &lt;- area_codes %&gt;%\n  rename(Area_Code = `Area.Code`, Area_Name = Area)\n\nitem_decoded &lt;- item_codes %&gt;%\n  rename(Item_Code = `Item.Code`, Item_Name = `Item`)\n\n# For plot 2\ncommodity_trends &lt;- livestock_data_long %&gt;%\n  filter(Element == \"Production\") %&gt;%\n  group_by(Year, Item) %&gt;%\n  summarise(Total_Production = sum(Value, na.rm = TRUE), .groups = \"drop\")\n\n# For plot 3\n# Load Natural Earth data for country boundaries\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Prepare data for map-based visualizations\n# Summarize livestock production by country\nmap_data &lt;- livestock_data_long %&gt;%\n  filter(Element %in% c(\"Production\", \"Export Quantity\", \"Import Quantity\")) %&gt;%\n  group_by(Area, Element) %&gt;%\n  summarize(Total_Value = sum(Value, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Merge map data with country boundaries\nmap_data &lt;- map_data %&gt;%\n  left_join(world, by = c(\"Area\" = \"admin\"))\n\n# Create separate datasets for production, export, and import\nmap_production &lt;- map_data %&gt;%\n  filter(Element == \"Production\")\n\nmap_trade &lt;- map_data %&gt;%\n  filter(Element %in% c(\"Export Quantity\", \"Import Quantity\")) %&gt;%\n  mutate(Trade_Type = ifelse(Element == \"Export Quantity\", \"Export\", \"Import\"))\n\n#For Interactive plot 4\n# Ensure `geometry` column is in correct SF format\nmap_production_sf &lt;- map_production %&gt;%\n  st_as_sf()\n\npopulation_data &lt;- data.frame(\n  Area = unique(map_production$Area),\n  Population = runif(length(unique(map_production$Area)), 1e6, 1e8) # Simulated population\n)\n\n# Merge population data to calculate per capita production\nmap_production &lt;- map_production %&gt;%\n  left_join(population_data, by = \"Area\") %&gt;%\n  mutate(Per_Capita_Production = Total_Value / Population)\n\n# Convert to sf object\nmap_production_sf &lt;- map_production %&gt;%\n  st_as_sf()\n\n# Step 2: Define color palette\nproduction_pal &lt;- colorNumeric(\"YlGn\", domain = map_production_sf$Total_Value)\nper_capita_pal &lt;- colorNumeric(\"Blues\", domain = map_production_sf$Per_Capita_Production)\n\n\n#Plot 1: Trends in livestock production and yeids\nggplot(data = aggregated_data, aes(x = Year, y = Total_Value / 1e6, color = Element)) +\n  geom_line(linewidth = 1.2) +\n  labs(\n    title = \"Global Trends in Livestock Production and Trade\",\n    x = \"Year\",\n    y = \"Volume ( Millions - Tons )\",\n    color = \"Element\"\n  ) +\n   theme(\n    plot.title = element_text(size = 22, face = \"bold\", hjust = 0.5),\n    axis.title.x = element_text(size = 19),\n    axis.title.y = element_text(size = 19),\n    axis.text = element_text(size = 12),\n    plot.caption = element_text(size = 14, hjust = 1, color = \"grey30\"),\n    legend.position = \"right\",  # Legend on the right\n    legend.direction = \"vertical\",  # Stack legend vertically\n    legend.title = element_text(size = 19),\n    legend.text = element_text(size = 18),\n    panel.background = element_rect(fill = \"white\", color = NA),  # Set white background\n    plot.background = element_rect(fill = \"white\", color = NA),  # Ensure white plot background\n    panel.grid.major = element_line(color = \"grey90\"),  # Subtle grid lines\n    panel.grid.minor = element_blank()  # Remove minor grid lines\n  )+\n  scale_y_continuous(labels = scales::comma)\n\n\n\n\n\n\n\n# Plot 2: Trends in individual livestock commodities (Production Only)\nggplot(data = commodity_trends, aes(x = Year, y = Total_Production / 1e6, fill = Item)) +\n  geom_area(position = \"stack\", alpha = 0.7) +\n  labs(\n    title = \"Trends in Production of Livestock Commodities\",\n    x = \"Year\",\n    y = \"Production Volume ( Millions - Tons )\",\n    fill = \"Commodity\"\n  ) +\n   theme(\n    plot.title = element_text(size = 22, face = \"bold\", hjust = 0.5),\n    axis.title.x = element_text(size = 19),\n    axis.title.y = element_text(size = 19),\n    axis.text = element_text(size = 12),\n    plot.caption = element_text(size = 14, hjust = 1, color = \"grey30\"),\n    legend.position = \"right\",  # Legend on the right\n    legend.direction = \"vertical\",  # Stack legend vertically\n    legend.title = element_text(size = 19),\n    legend.text = element_text(size = 18),\n    panel.background = element_rect(fill = \"white\", color = NA),  # Set white background\n    plot.background = element_rect(fill = \"white\", color = NA),  # Ensure white plot background\n    panel.grid.major = element_line(color = \"grey90\"),  # Subtle grid lines\n    panel.grid.minor = element_blank()  # Remove minor grid lines\n  )\n\n\n\n\n\n\n\n# Plot 3: Livestock Production on a World Map\nggplot() +\n  geom_sf(data = world) +\n  geom_sf(data = map_production, aes(geometry = geometry, fill = Total_Value), color = \"black\") +\n  scale_fill_viridis_c(name = \"Production (tons)\", option = \"C\") +\n  scale_fill_gradient(\n    low = \"khaki1\", \n    high = \"green4\"\n  )+\n  labs(\n    title = \"Global Livestock Production\",\n    subtitle = \"Production volumes (tons) by country\",\n    caption = \"Source: FAO Livestock Data\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n# Enhanced Leaflet Map\nleaflet() %&gt;%\n  # Add a base map\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  \n  # Add Total Production Layer\n  addPolygons(\n    data = map_production_sf,\n    fillColor = ~production_pal(Total_Value),\n    color = \"black\",\n    weight = 1,\n    fillOpacity = ~pmax(Total_Value / max(map_production_sf$Total_Value, na.rm = TRUE), 0.2),  # Dynamic opacity\n    label = ~paste(\n      \"&lt;strong&gt;Country:&lt;/strong&gt; \", Area, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Total Production:&lt;/strong&gt; \", scales::comma(Total_Value), \" tons\"\n    ),\n    popup = ~paste(\n      \"&lt;strong&gt;Country:&lt;/strong&gt; \", Area, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Total Production (tons):&lt;/strong&gt; \", scales::comma(Total_Value), \"&lt;br&gt;\",\n      \"&lt;strong&gt;Population:&lt;/strong&gt; \", scales::comma(Population), \"&lt;br&gt;\",\n      \"&lt;strong&gt;Per Capita Production (tons):&lt;/strong&gt; \", round(Per_Capita_Production, 2)\n    ),\n    highlightOptions = highlightOptions(\n      weight = 3,\n      color = \"blue\",\n      bringToFront = TRUE\n    ),\n    group = \"Total Production\"\n  ) %&gt;%\n  \n  # Add Per Capita Production Layer\n  addPolygons(\n    data = map_production_sf,\n    fillColor = ~per_capita_pal(Per_Capita_Production),\n    color = \"black\",\n    weight = 1,\n    fillOpacity = ~pmax(Per_Capita_Production / max(map_production_sf$Per_Capita_Production, na.rm = TRUE), 0.2),  # Dynamic opacity\n    label = ~paste(\n      \"&lt;strong&gt;Country:&lt;/strong&gt; \", Area, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Per Capita Production:&lt;/strong&gt; \", round(Per_Capita_Production, 2), \" tons\"\n    ),\n    popup = ~paste(\n      \"&lt;strong&gt;Country:&lt;/strong&gt; \", Area, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Per Capita Production (tons):&lt;/strong&gt; \", round(Per_Capita_Production, 2), \"&lt;br&gt;\",\n      \"&lt;strong&gt;Total Production (tons):&lt;/strong&gt; \", scales::comma(Total_Value), \"&lt;br&gt;\",\n      \"&lt;strong&gt;Population:&lt;/strong&gt; \", scales::comma(Population)\n    ),\n    highlightOptions = highlightOptions(\n      weight = 3,\n      color = \"green\",\n      bringToFront = TRUE\n    ),\n    group = \"Per Capita Production\"\n  ) %&gt;%\n  \n  # Add Layer Control\n  addLayersControl(\n    baseGroups = c(\"Base Map\"),\n    overlayGroups = c(\"Total Production\", \"Per Capita Production\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  \n  # Add Legend for Total Production\n  addLegend(\n    pal = production_pal,\n    values = map_production_sf$Total_Value,\n    title = \"Total Production&lt;br&gt;(in tons)\",\n    position = \"bottomleft\",\n    group = \"Total Production\"\n  ) %&gt;%\n  \n  # Add Legend for Per Capita Production\n  addLegend(\n    pal = per_capita_pal,\n    values = map_production_sf$Per_Capita_Production,\n    title = \"Per Capita&lt;br&gt;Production (tons)\",\n    position = \"bottomright\",\n    group = \"Per Capita Production\"\n  )\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet)\nlibrary(scales)\n\n# Enhanced Leaflet Map\nleaflet() %&gt;%\n  # Add a base map\n  addProviderTiles(providers$CartoDB.Positron) %&gt;%\n  \n  # Add Total Production Layer\n  addPolygons(\n    data = map_production_sf,\n    fillColor = ~production_pal(Total_Value),\n    color = \"black\",\n    weight = 1,\n    fillOpacity = ~pmax(Total_Value / max(map_production_sf$Total_Value, na.rm = TRUE), 0.2),  # Dynamic opacity\n    label = ~paste(\n      \"&lt;strong&gt;Country:&lt;/strong&gt; \", Area, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Total Production:&lt;/strong&gt; \", scales::comma(Total_Value), \" tons\"\n    ),\n    popup = ~paste(\n      \"&lt;strong&gt;Country:&lt;/strong&gt; \", Area, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Total Production (tons):&lt;/strong&gt; \", scales::comma(Total_Value), \"&lt;br&gt;\",\n      \"&lt;strong&gt;Population:&lt;/strong&gt; \", scales::comma(Population), \"&lt;br&gt;\",\n      \"&lt;strong&gt;Per Capita Production (tons):&lt;/strong&gt; \", round(Per_Capita_Production, 2)\n    ),\n    highlightOptions = highlightOptions(\n      weight = 3,\n      color = \"blue\",\n      bringToFront = TRUE\n    ),\n    group = \"Total Production\"\n  ) %&gt;%\n  \n  # Add Per Capita Production Layer\n  addPolygons(\n    data = map_production_sf,\n    fillColor = ~per_capita_pal(Per_Capita_Production),\n    color = \"black\",\n    weight = 1,\n    fillOpacity = ~pmax(Per_Capita_Production / max(map_production_sf$Per_Capita_Production, na.rm = TRUE), 0.2),  # Dynamic opacity\n    label = ~paste(\n      \"&lt;strong&gt;Country:&lt;/strong&gt; \", Area, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Per Capita Production:&lt;/strong&gt; \", round(Per_Capita_Production, 2), \" tons\"\n    ),\n    popup = ~paste(\n      \"&lt;strong&gt;Country:&lt;/strong&gt; \", Area, \"&lt;br&gt;\",\n      \"&lt;strong&gt;Per Capita Production (tons):&lt;/strong&gt; \", round(Per_Capita_Production, 2), \"&lt;br&gt;\",\n      \"&lt;strong&gt;Total Production (tons):&lt;/strong&gt; \", scales::comma(Total_Value), \"&lt;br&gt;\",\n      \"&lt;strong&gt;Population:&lt;/strong&gt; \", scales::comma(Population)\n    ),\n    highlightOptions = highlightOptions(\n      weight = 3,\n      color = \"green\",\n      bringToFront = TRUE\n    ),\n    group = \"Per Capita Production\"\n  ) %&gt;%\n  \n  # Add Layer Control\n  addLayersControl(\n    baseGroups = c(\"Base Map\"),\n    overlayGroups = c(\"Total Production\", \"Per Capita Production\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  \n  # Add Legend for Total Production\n  addLegend(\n    pal = production_pal,\n    values = map_production_sf$Total_Value,\n    title = \"Total Production&lt;br&gt;(in tons)\",\n    position = \"bottomleft\",\n    group = \"Total Production\"\n  ) %&gt;%\n  \n  # Add Legend for Per Capita Production\n  addLegend(\n    pal = per_capita_pal,\n    values = map_production_sf$Per_Capita_Production,\n    title = \"Per Capita&lt;br&gt;Production (tons)\",\n    position = \"bottomright\",\n    group = \"Per Capita Production\"\n  )\n\n\n\n\n:::"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visualization of Crop and Livestock products",
    "section": "",
    "text": "This project focuses on compiling and analyzing statistical data for a diverse range of 278 crop and livestock products. The dataset will be expressed in key indicators like production quantities, yields, and processed product outputs, making it a valuable resource for understanding global agricultural production patterns across crops and livestock industries."
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Visualization of Crop and Livestock products",
    "section": "",
    "text": "This project focuses on compiling and analyzing statistical data for a diverse range of 278 crop and livestock products. The dataset will be expressed in key indicators like production quantities, yields, and processed product outputs, making it a valuable resource for understanding global agricultural production patterns across crops and livestock industries."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Visualization of Crop and Livestock products",
    "section": "Introduction",
    "text": "Introduction\nThis report analyzes the FAOSTAT Crop and Livestock Production dataset, which provides global agricultural production statistics across more than 200 countries. The dataset covers crop production volumes, harvested areas, and yields, alongside livestock statistics. The objective of this project is to explore trends in agricultural productivity, compare regional outputs, and assess the sustainability of agricultural practices."
  },
  {
    "objectID": "index.html#source-of-the-data",
    "href": "index.html#source-of-the-data",
    "title": "Visualization of Crop and Livestock products",
    "section": "Source of the Data",
    "text": "Source of the Data\nThe data used in this report is curated by the Food and Agriculture Organization (FAO) of the United Nations, through their FAOSTAT database. It includes data collected annually since 1961 from government sources, surveys, and FAO estimates. website link : https://www.fao.org/faostat/en/#data/QCL"
  },
  {
    "objectID": "index.html#data-collection",
    "href": "index.html#data-collection",
    "title": "Visualization of Crop and Livestock products",
    "section": "Data Collection",
    "text": "Data Collection\nThe dataset is compiled from official reports from national statistical offices, and in cases of missing data, FAO uses estimation methods. This ensures consistency in the data for over 200 countries and regions."
  },
  {
    "objectID": "index.html#column-observations",
    "href": "index.html#column-observations",
    "title": "Visualization of Crop and Livestock products",
    "section": "Column Observations",
    "text": "Column Observations\nThe dataset consists of 79,381 rows and 195 columns. Each row represents the production data for a specific commodity in a given country and year. The key variables include:\n\nArea: Country or region.\nItem: Commodity (e.g., wheat, rice, livestock).\nElement: Type of data (e.g., production, area harvested).\nYear: Year of the observation.\nYxxxx: Yearly production data. (e.g., Y1961, Y1962), where xxxx is the year.\nValue: Recorded production value."
  },
  {
    "objectID": "index.html#exploratory-data-analysis-eda",
    "href": "index.html#exploratory-data-analysis-eda",
    "title": "Visualization of Crop and Livestock products",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nWe took a number of measures to carry out inspection, cleaning, and visualization of the data effectively, which in turn enables us to conduct analysis regarding livestock production trends and its regional distribution.\n\nData Inspection\n\nUnderstanding the structure and content of a dataset is essential, so this method consisted of loading and examining the dataset. The dataset consists of several columns, including:\nArea: Refers to the country or region.\nItem: Denotes the specific livestock commodity (e.g., Beef, Poultry, Milk).\nElement: Represents the type of data, such as “Production,” “Area harvested,” or “Yield.”\nYear: The year of the data.\nValue: The production value (in tons, hectares, etc.) for the specified year and item.\nExamination of the dataset produced values that were relatively substantial as the data collected covered a period of several decades.\n\nData Cleaning\n\nFor such cleaning operations, we focused removal of rows containing missing values on key columns such as Area, Item and Element. This step ensured that the analysis concentrated on completed records only without any other missing or non-relevant information.\nPost- cleaning, the data was arranged in such a manner that Year and Item columns served as the grouping variables while Value was used to denote the total production or harvested area for that year and item.\n\nDistribution of Livestock Holding Items\n\nThe first insight was in livestock items distribution across the locations in the database. The commonest items cut across include beef, poultry, milk and pork, which form the leading lines in the livestock production for the world. This distribution gives an idea of the intensity of different types of livestock kept and can be useful in the later analysis by helping to establish in which region which commodities are most produced.\n\nproduct Data Description\n\nWe created an item-centric cross -section in the dataset for ”Production” data by such years. This brought out the perspective of total production for each livestock commodity in the course of time. The total amounts of production of every commodity were in estimates, which enabled the study to observe which livestock product had the biggest global turnovers in livestock production.\n\nAnnual Variation in Growth of Animal Resources\n\nAn important aspect of the analysis was to assess the scope of change in livestock production in the course of time. We displayed the shifts in production of poultry, beef and milk over the period under analysis. For instance, while poultry and beef sectors witnessed dramatic increases during the period in the production, others grew only moderate or flat.\n\nLivestock Production Across The World\n\nThereafter, we proceeded to analyze livestock production from geographic perspective. We made a case to combine production statistics by Region (country) and inquired which countries are the most significant net live stock producers on a global basis. The findings suggest that livestock production is indeed concentrated in only a few countries and on top of that list are China, United States and Brazil.\nIn order to illustrate what these figures mean, we have created charts for the concentration of livestock production across the regions. This type of assessment enables the determination of regions which in the case of meat and milk production play more than just a peripheral role in world production.\n\nMissing Data Analysis\n\nAmong the other activities in EDA, one critical aspect is the identification and treatment of missing data. In the dataset, respondents from certain regions or years were missing which could impair the wholeness of our analysis. We checked for any non-response or partial non-response and presented the depiction of the distribution of missing data to ensure that it did not heavily impact our results."
  },
  {
    "objectID": "index.html#methodology",
    "href": "index.html#methodology",
    "title": "Visualization of Crop and Livestock products",
    "section": "Methodology",
    "text": "Methodology\nThis analysis examines the trends in global livestock production based on information from the FAOSTAT database focusing on several commodities, namely beef, poultry, and milk. Generally, a technique is conceived in terms of\n\nData Collection Sourcing data basically from the FAOSTAT Crop and Livestock Production dataset, including volumes produced, harvested areas, and yields from various livestock commodities across the world of more than 200 countries.\n\nKey datasets carried out for the analysis included:\nProduction_Crops_Livestock_E_All_Data.csv: It comprises production data for multiple livestock commodities. Production_Crops_Livestock_E_AreaCodes.csv: It provides the area (country) codes and names. Production_Crops_Livestock_E_Elements.csv: It provides the respective observations of various elements (production, area harvested, yield). Production_Crops_Livestock_E_ItemCodes.csv: It gives codes and descriptions of each component of livestock (i.e., Beef, Poultry, Milk).\n\nData Processing The dataset was reshaped from a wide format (with columns for each year) to a long format (with year and value columns), enabling the analysis of time series data for each commodity. This was achieved by pivoting the dataset on the year column. Rows with missing values for essential columns, such as Year or Value, were removed. This ensured that only complete observations were used for analysis.\nData Aggregation For subsequent analysis, the data was aggregated on various levels.An Annual Aggregation, total cattle production, area harvested, and yield were aggregated per commodity for each year. That is, the data for the respective years were grouped by Year and Element Value was then summed for each group. A commodity-level trend analysis was made to track and analyse the trends in production of individual livestock commodities over time. Any production data for each livestock item were aggregated and visualizations for individual livestock products over a certain period were constructed.\nVisualization There are a range of techniques used to create visualizations, including such that demonstrate time series data for global livestock trends; stacked area plots for individual commodity trends; choropleth maps indicating country-wise production. Interactive maps were used for per capita production exploration by country."
  },
  {
    "objectID": "index.html#results",
    "href": "index.html#results",
    "title": "Visualization of Crop and Livestock products",
    "section": "Results",
    "text": "Results"
  },
  {
    "objectID": "index.html#discussion",
    "href": "index.html#discussion",
    "title": "Visualization of Crop and Livestock products",
    "section": "Discussion",
    "text": "Discussion\nAnalysis of livestock production trends worldwide has confirmed substantial increments in production involving poultry, beef, and milk due to the rising demand for population growth and dietary changes. However, contrary trends do exist: the countries in Asia and Africa might grow faster, while slow growth has occurred in Europe and America due to market maturity.\nThe study identifies some inefficiencies and environmental challenges of large-scale livestock production among the largest producers in the world, but it highlights the need for more sustainable practices. Additionally, livestock trade plays a very important role, with countries like Brazil and Australia putting their stamp on the production dynamics of the world.\nThe findings highlight that policymakers have to encourage sustainability and efficiency in livestock farming, alongside optimizing the consequences on the environment. Further research may deal with the effects of climate change and alternatives to conventional livestock products."
  },
  {
    "objectID": "index.html#future-work",
    "href": "index.html#future-work",
    "title": "Visualization of Crop and Livestock products",
    "section": "Future work",
    "text": "Future work\nFuture research sectors should focus on studies that would assess the impact of climate change on livestock production in especially vulnerable regions. Also, it is imperative to explore alternative and sustainable livestock practices and alternative sources of protein to reduce the environmental impacts. More investigations will fill in the gap on policy interventions and international trades that shape global livestock production trends and how one balances production efficiencies with sustainability. Lastly, further social inquiry would consider the potential effects of technological innovations in animal farming on global production dynamics."
  }
]